version: 2.1
parameters:
  # This parameter is used to trigger the main workflow
  trigger:
    type: boolean
    default: true

  # A parameter per package
  model:
    type: boolean
    default: false
  engine:
    type: boolean
    default: false
  designer:
    type: boolean
    default: false
  runner:
    type: boolean
    default: false



executors:
  node:
    docker:
      - image: circleci/node:12
  node-browsers:
    docker:
      - image: circleci/node:12.16-browsers
  python:
    docker:
      - image: circleci/python:2.7-jessie

jobs:
  trigger-workflows:
    executor: node
    steps:
      - checkout
      - run:
          name: Trigger workflows
          command: chmod +x .circleci/circle_trigger.sh && .circleci/circle_trigger.sh

  install-yarn:
    executor: node-browsers
    working_directory: ~/project

    steps:
      - checkout

      - run:
          name: Set yarn 2
          command: |
            yarn set version berry
      - restore_cache:
          keys:
            # fallback to using the latest cache if no exact match is found
            - root-dependencies-{{ checksum "yarn.lock" }}
            - root-dependencies

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
            - .yarn
            - engine/node_modules
            - model/node_modules
            - designer/node_modules
            - runner/node_modules
            - engine/flow-typed
            - model/flow-typed
            - designer/flow-typed
            - runner/flow-typed
          key: dependencies-{{ checksum "yarn.lock" }}

#      - save_cache:
#          paths:
##            - << parameters.package_name >>/flow-typed
#          key: << parameters.package_name >>-dependencies-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  build:
    parameters:
      package_name:
        type: string
      should_build:
        type: boolean

    executor: node-browsers
    working_directory: ~/project

    steps:
      - run:
          name: Skip << parameters.package_name >>, no changes made
          command: |
            if [ ! ${<< parameters.should_build >>} ]; then
              circleci-agent step halt
            fi

      - attach_workspace:
          at: ~/project

      - restore_cache:
          keys:
            # fallback to using the latest cache if no exact match is found
            - << parameters.package_name >>-dependencies-{{ checksum "yarn.lock" }}
            - << parameters.package_name >>-dependencies
      - run:
          name: Build
          command: |
            yarn workspace @xgovformbuilder/<< parameters.package_name >> run build

      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  test:
    parameters:
      package_name:
        type: string
      should_build:
        type: boolean

    executor: node-browsers

    steps:
      - attach_workspace:
          at: ~/project

      - run:
          name: Skip << parameters.package_name >>, no changes made
          command: |
            if [ ! ${<< parameters.should_build >>} ]; then
              circleci-agent step halt
            fi

      - run:
          name: Test
          command: yarn workspace @xgovformbuilder/<< parameters.package_name >> run test

workflows:
  version: 2

  # The main workflow responsible for triggering all other workflows
  # in which changes are detected.
  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows


  # Workflows defined for each package.

#  install:
#    jobs:
    #  - install-yarn

#  model:
#    jobs:
#      - build:
#          name: model-build
#          package_name: model
#      - test:
#          name: model-test
#          package_name: model
#          requires:
#            - model-build
#
#  engine:
#    when: << pipeline.parameters.engine >>
#    jobs:
#      - build:
#          name: model-build
#          package_name: model
#      - build:
#          name: engine-build
#          package_name: engine
#          requires:
#            - model-build
#      - test:
#          name: engine-test
#          package_name: engine
#          requires:
#            - engine-build

#  designer:
#    when: << pipeline.parameters.designer >>
#    jobs:
#      - install-yarn
#      - build:
#          name: designer-build
#          package_name: designer
#          requires:
#            - install-yarn
#      - test:
#          name: designer-test
#          package_name: designer
#          requires:
#            - designer-build

  build-test:
    jobs:
      - install-yarn
      - build:
          name: model-build
          package_name: model
          should_build: << pipeline.parameters.model >>
          requires:
            - install-yarn
      - test:
          name: model-test
          package_name: model
          should_build: << pipeline.parameters.model >>
          requires:
            - model-build

      - build:
          name: engine-build
          package_name: engine
          should_build: << pipeline.parameters.engine >>
          requires:
            - model-test
      - test:
          name: engine-test
          package_name: engine
          should_build: << pipeline.parameters.engine >>
          requires:
            - engine-build

      - build:
          name: runner-build
          package_name: runner
          should_build: << pipeline.parameters.runner >>
          requires:
            - engine-build
      - test:
          name: runner-test
          package_name: runner
          should_build: << pipeline.parameters.runner >>
          requires:
            - runner-build

      - build:
          name: designer-build
          package_name: designer
          should_build: << pipeline.parameters.designer >>
          requires:
            - model-test
      - test:
          name: designer-test
          package_name: designer
          should_build: << pipeline.parameters.designer >>
          requires:
            - designer-build


#  runner:
#    when: << pipeline.parameters.runner >>
#    jobs:
#      - build:
#          name: runner-build
#          package_name: runner
#      - test:
#          name: runner-test
#          package_name: runner
#          requires:
#            - runner-build
