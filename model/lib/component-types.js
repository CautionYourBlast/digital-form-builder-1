"use strict";

module.exports = [{
  name: 'TextField',
  title: 'Text field',
  subType: 'field'
}, {
  name: 'MultilineTextField',
  title: 'Multiline text field',
  subType: 'field'
}, {
  name: 'YesNoField',
  title: 'Yes/No field',
  subType: 'field'
}, {
  name: 'DateField',
  title: 'Date field',
  subType: 'field'
}, {
  name: 'TimeField',
  title: 'Time field',
  subType: 'field'
}, {
  name: 'DateTimeField',
  title: 'Date time field',
  subType: 'field'
}, {
  name: 'DatePartsField',
  title: 'Date parts field',
  subType: 'field'
}, {
  name: 'DateTimePartsField',
  title: 'Date time parts field',
  subType: 'field'
}, {
  name: 'SelectField',
  title: 'Select field',
  subType: 'field'
}, {
  name: 'AutocompleteField',
  title: 'Autocomplete field',
  subType: 'field'
}, {
  name: 'RadiosField',
  title: 'Radios field',
  subType: 'field'
}, {
  name: 'CheckboxesField',
  title: 'Checkboxes field',
  subType: 'field'
}, {
  name: 'NumberField',
  title: 'Number field',
  subType: 'field'
}, {
  name: 'UkAddressField',
  title: 'Uk address field',
  subType: 'field'
}, {
  name: 'TelephoneNumberField',
  title: 'Telephone number field',
  subType: 'field'
}, {
  name: 'EmailAddressField',
  title: 'Email address field',
  subType: 'field'
}, {
  name: 'FileUploadField',
  title: 'File upload field',
  subType: 'field'
}, {
  name: 'Para',
  title: 'Paragraph',
  subType: 'content'
}, {
  name: 'Html',
  title: 'Html',
  subType: 'content'
}, {
  name: 'InsetText',
  title: 'Inset text',
  subType: 'content'
}, {
  name: 'Details',
  title: 'Details',
  subType: 'content'
}, {
  name: 'FlashCard',
  title: 'Flash card',
  subType: 'content'
}, {
  name: 'List',
  title: 'List',
  subType: 'content'
}];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb21wb25lbnQtdHlwZXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm5hbWUiLCJ0aXRsZSIsInN1YlR5cGUiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUNmO0FBQ0VDLEVBQUFBLElBQUksRUFBRSxXQURSO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxZQUZUO0FBR0VDLEVBQUFBLE9BQU8sRUFBRTtBQUhYLENBRGUsRUFNZjtBQUNFRixFQUFBQSxJQUFJLEVBQUUsb0JBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLHNCQUZUO0FBR0VDLEVBQUFBLE9BQU8sRUFBRTtBQUhYLENBTmUsRUFXZjtBQUNFRixFQUFBQSxJQUFJLEVBQUUsWUFEUjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsY0FGVDtBQUdFQyxFQUFBQSxPQUFPLEVBQUU7QUFIWCxDQVhlLEVBZ0JmO0FBQ0VGLEVBQUFBLElBQUksRUFBRSxXQURSO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxZQUZUO0FBR0VDLEVBQUFBLE9BQU8sRUFBRTtBQUhYLENBaEJlLEVBcUJmO0FBQ0VGLEVBQUFBLElBQUksRUFBRSxXQURSO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxZQUZUO0FBR0VDLEVBQUFBLE9BQU8sRUFBRTtBQUhYLENBckJlLEVBMEJmO0FBQ0VGLEVBQUFBLElBQUksRUFBRSxlQURSO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxpQkFGVDtBQUdFQyxFQUFBQSxPQUFPLEVBQUU7QUFIWCxDQTFCZSxFQStCZjtBQUNFRixFQUFBQSxJQUFJLEVBQUUsZ0JBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLGtCQUZUO0FBR0VDLEVBQUFBLE9BQU8sRUFBRTtBQUhYLENBL0JlLEVBb0NmO0FBQ0VGLEVBQUFBLElBQUksRUFBRSxvQkFEUjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsdUJBRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0FwQ2UsRUF5Q2Y7QUFDRUYsRUFBQUEsSUFBSSxFQUFFLGFBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLGNBRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0F6Q2UsRUE4Q2Y7QUFDRUYsRUFBQUEsSUFBSSxFQUFFLG1CQURSO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxvQkFGVDtBQUdFQyxFQUFBQSxPQUFPLEVBQUU7QUFIWCxDQTlDZSxFQW1EZjtBQUNFRixFQUFBQSxJQUFJLEVBQUUsYUFEUjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsY0FGVDtBQUdFQyxFQUFBQSxPQUFPLEVBQUU7QUFIWCxDQW5EZSxFQXdEZjtBQUNFRixFQUFBQSxJQUFJLEVBQUUsaUJBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLGtCQUZUO0FBR0VDLEVBQUFBLE9BQU8sRUFBRTtBQUhYLENBeERlLEVBNkRmO0FBQ0VGLEVBQUFBLElBQUksRUFBRSxhQURSO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxjQUZUO0FBR0VDLEVBQUFBLE9BQU8sRUFBRTtBQUhYLENBN0RlLEVBa0VmO0FBQ0VGLEVBQUFBLElBQUksRUFBRSxnQkFEUjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsa0JBRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0FsRWUsRUF1RWY7QUFDRUYsRUFBQUEsSUFBSSxFQUFFLHNCQURSO0FBRUVDLEVBQUFBLEtBQUssRUFBRSx3QkFGVDtBQUdFQyxFQUFBQSxPQUFPLEVBQUU7QUFIWCxDQXZFZSxFQTRFZjtBQUNFRixFQUFBQSxJQUFJLEVBQUUsbUJBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLHFCQUZUO0FBR0VDLEVBQUFBLE9BQU8sRUFBRTtBQUhYLENBNUVlLEVBaUZmO0FBQ0VGLEVBQUFBLElBQUksRUFBRSxpQkFEUjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsbUJBRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0FqRmUsRUFzRmY7QUFDRUYsRUFBQUEsSUFBSSxFQUFFLE1BRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLFdBRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0F0RmUsRUEyRmY7QUFDRUYsRUFBQUEsSUFBSSxFQUFFLE1BRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLE1BRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0EzRmUsRUFnR2Y7QUFDRUYsRUFBQUEsSUFBSSxFQUFFLFdBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLFlBRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0FoR2UsRUFxR2Y7QUFDRUYsRUFBQUEsSUFBSSxFQUFFLFNBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLFNBRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0FyR2UsRUEwR2Y7QUFDRUYsRUFBQUEsSUFBSSxFQUFFLFdBRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLFlBRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0ExR2UsRUErR2Y7QUFDRUYsRUFBQUEsSUFBSSxFQUFFLE1BRFI7QUFFRUMsRUFBQUEsS0FBSyxFQUFFLE1BRlQ7QUFHRUMsRUFBQUEsT0FBTyxFQUFFO0FBSFgsQ0EvR2UsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFtcbiAge1xuICAgIG5hbWU6ICdUZXh0RmllbGQnLFxuICAgIHRpdGxlOiAnVGV4dCBmaWVsZCcsXG4gICAgc3ViVHlwZTogJ2ZpZWxkJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ011bHRpbGluZVRleHRGaWVsZCcsXG4gICAgdGl0bGU6ICdNdWx0aWxpbmUgdGV4dCBmaWVsZCcsXG4gICAgc3ViVHlwZTogJ2ZpZWxkJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ1llc05vRmllbGQnLFxuICAgIHRpdGxlOiAnWWVzL05vIGZpZWxkJyxcbiAgICBzdWJUeXBlOiAnZmllbGQnXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAnRGF0ZUZpZWxkJyxcbiAgICB0aXRsZTogJ0RhdGUgZmllbGQnLFxuICAgIHN1YlR5cGU6ICdmaWVsZCdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdUaW1lRmllbGQnLFxuICAgIHRpdGxlOiAnVGltZSBmaWVsZCcsXG4gICAgc3ViVHlwZTogJ2ZpZWxkJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ0RhdGVUaW1lRmllbGQnLFxuICAgIHRpdGxlOiAnRGF0ZSB0aW1lIGZpZWxkJyxcbiAgICBzdWJUeXBlOiAnZmllbGQnXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAnRGF0ZVBhcnRzRmllbGQnLFxuICAgIHRpdGxlOiAnRGF0ZSBwYXJ0cyBmaWVsZCcsXG4gICAgc3ViVHlwZTogJ2ZpZWxkJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ0RhdGVUaW1lUGFydHNGaWVsZCcsXG4gICAgdGl0bGU6ICdEYXRlIHRpbWUgcGFydHMgZmllbGQnLFxuICAgIHN1YlR5cGU6ICdmaWVsZCdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdTZWxlY3RGaWVsZCcsXG4gICAgdGl0bGU6ICdTZWxlY3QgZmllbGQnLFxuICAgIHN1YlR5cGU6ICdmaWVsZCdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdBdXRvY29tcGxldGVGaWVsZCcsXG4gICAgdGl0bGU6ICdBdXRvY29tcGxldGUgZmllbGQnLFxuICAgIHN1YlR5cGU6ICdmaWVsZCdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdSYWRpb3NGaWVsZCcsXG4gICAgdGl0bGU6ICdSYWRpb3MgZmllbGQnLFxuICAgIHN1YlR5cGU6ICdmaWVsZCdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdDaGVja2JveGVzRmllbGQnLFxuICAgIHRpdGxlOiAnQ2hlY2tib3hlcyBmaWVsZCcsXG4gICAgc3ViVHlwZTogJ2ZpZWxkJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ051bWJlckZpZWxkJyxcbiAgICB0aXRsZTogJ051bWJlciBmaWVsZCcsXG4gICAgc3ViVHlwZTogJ2ZpZWxkJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ1VrQWRkcmVzc0ZpZWxkJyxcbiAgICB0aXRsZTogJ1VrIGFkZHJlc3MgZmllbGQnLFxuICAgIHN1YlR5cGU6ICdmaWVsZCdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdUZWxlcGhvbmVOdW1iZXJGaWVsZCcsXG4gICAgdGl0bGU6ICdUZWxlcGhvbmUgbnVtYmVyIGZpZWxkJyxcbiAgICBzdWJUeXBlOiAnZmllbGQnXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAnRW1haWxBZGRyZXNzRmllbGQnLFxuICAgIHRpdGxlOiAnRW1haWwgYWRkcmVzcyBmaWVsZCcsXG4gICAgc3ViVHlwZTogJ2ZpZWxkJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ0ZpbGVVcGxvYWRGaWVsZCcsXG4gICAgdGl0bGU6ICdGaWxlIHVwbG9hZCBmaWVsZCcsXG4gICAgc3ViVHlwZTogJ2ZpZWxkJ1xuICB9LFxuICB7XG4gICAgbmFtZTogJ1BhcmEnLFxuICAgIHRpdGxlOiAnUGFyYWdyYXBoJyxcbiAgICBzdWJUeXBlOiAnY29udGVudCdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdIdG1sJyxcbiAgICB0aXRsZTogJ0h0bWwnLFxuICAgIHN1YlR5cGU6ICdjb250ZW50J1xuICB9LFxuICB7XG4gICAgbmFtZTogJ0luc2V0VGV4dCcsXG4gICAgdGl0bGU6ICdJbnNldCB0ZXh0JyxcbiAgICBzdWJUeXBlOiAnY29udGVudCdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdEZXRhaWxzJyxcbiAgICB0aXRsZTogJ0RldGFpbHMnLFxuICAgIHN1YlR5cGU6ICdjb250ZW50J1xuICB9LFxuICB7XG4gICAgbmFtZTogJ0ZsYXNoQ2FyZCcsXG4gICAgdGl0bGU6ICdGbGFzaCBjYXJkJyxcbiAgICBzdWJUeXBlOiAnY29udGVudCdcbiAgfSxcbiAge1xuICAgIG5hbWU6ICdMaXN0JyxcbiAgICB0aXRsZTogJ0xpc3QnLFxuICAgIHN1YlR5cGU6ICdjb250ZW50J1xuICB9XG5dXG4iXX0=